// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`@pinceau/theme > formats/ > css.ts > build format 1`] = `
{
  "buildDir": undefined,
  "outputs": {
    "pinceau.css": "@media {:root {--pinceau-mq: $initial;--primary: red;}}",
  },
  "theme": {
    "color": {
      "primary": {
        "value": "red",
        "variable": undefined,
      },
    },
  },
}
`;

exports[`@pinceau/theme > formats/ > definitions.ts > build format 1`] = `
{
  "buildDir": undefined,
  "outputs": {
    "$pinceau/definitions": "export const definitions = {}",
  },
  "theme": {
    "color": {
      "primary": {
        "value": "red",
        "variable": undefined,
      },
    },
  },
}
`;

exports[`@pinceau/theme > formats/ > hmr.ts > build format 1`] = `
{
  "buildDir": undefined,
  "outputs": {
    "$pinceau/hmr": "import { updateStyle } from '/@vite/client'

if (import.meta.hot) {
  // Theme updates
  import.meta.hot.on(
    'pinceau:theme',
    theme => {
      theme?.css && updateStyle('pinceau.css', theme.css)
    }
  )

  // CSS Functions updates
  import.meta.hot.on(
    'pinceau:style-function',
    ({ filename, id, css }) => {
      // Find the target node
      const node = document.querySelector(\`style[data-vite-dev-id*=\\"pinceau-style-function\\"][data-vite-dev-id*=\\"\${id}\\"]\`)
      if (!node) return
      
      // Find the target node data-vite-dev-id
      const nodeId = node?.attributes?.['data-vite-dev-id']?.value
      if (!nodeId) return

      // Update that node style
      updateStyle(nodeId, css)
    }
  )
}",
  },
  "theme": {
    "color": {
      "primary": {
        "value": "red",
        "variable": undefined,
      },
    },
  },
}
`;

exports[`@pinceau/theme > formats/ > javascript.ts > build format 1`] = `
{
  "buildDir": undefined,
  "outputs": {
    "$pinceau/theme-types": "export const theme = {
  \\"color\\": {
    \\"primary\\": {
      \\"value\\": \\"red\\"
    }
  }
} as const

export type GeneratedPinceauTheme = typeof theme

export type GeneratedPinceauMediaQueries = \\"$dark\\" | \\"$light\\" | \\"$initial\\";

export type GeneratedPinceauThemePaths = \\"$color.primary\\";

export default theme",
  },
  "theme": {
    "color": {
      "primary": {
        "value": "red",
        "variable": undefined,
      },
    },
  },
}
`;

exports[`@pinceau/theme > formats/ > schema.ts > build format 1`] = `
{
  "buildDir": undefined,
  "outputs": {
    "$pinceau/schema": "export const schema = {
  \\"properties\\": {},
  \\"default\\": {}
}

export default schema",
  },
  "theme": {
    "color": {
      "primary": {
        "value": "red",
        "variable": undefined,
      },
    },
  },
}
`;

exports[`@pinceau/theme > formats/ > utils.ts > build format 1`] = `
{
  "buildDir": undefined,
  "outputs": {
    "$pinceau/utils": "export const utils = {}

export default utils",
  },
  "theme": {
    "color": {
      "primary": {
        "value": "red",
        "variable": undefined,
      },
    },
  },
}
`;
